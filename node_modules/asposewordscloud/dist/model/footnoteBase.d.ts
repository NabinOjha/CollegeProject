import { AttributeInfo } from '../internal/attributeInfo';
import { DocumentPosition } from './documentPosition';
export declare const importsMapFootnoteBase: {
    DocumentPosition: typeof DocumentPosition;
};
/**
 * Footnote base class.
 */
export declare class FootnoteBase {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets position.
     */
    position: DocumentPosition;
    /**
     * Gets or sets returns a value that specifies whether this is a footnote or endnote.
     */
    footnoteType: FootnoteBase.FootnoteTypeEnum;
    /**
     * Gets or sets /sets custom reference mark to be used for this footnote. Default value is Empty, meaning auto-numbered footnotes are used.
     */
    referenceMark: string;
    /**
     * Gets or sets this is a convenience property that allows to easily get or set text of the footnote.
     */
    text: string;
    constructor(init?: Partial<FootnoteBase>);
}
/**
 * Enums for FootnoteBase
 */
export declare namespace FootnoteBase {
    enum FootnoteTypeEnum {
        Footnote,
        Endnote
    }
}
