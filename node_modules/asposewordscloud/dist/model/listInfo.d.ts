import { AttributeInfo } from '../internal/attributeInfo';
import { LinkElement } from './linkElement';
import { ListLevels } from './listLevels';
import { Style } from './style';
import { WordsApiLink } from './wordsApiLink';
export declare const importsMapListInfo: {
    LinkElement: typeof LinkElement;
    ListLevels: typeof ListLevels;
    Style: typeof Style;
    WordsApiLink: typeof WordsApiLink;
};
/**
 * Represents a single document list.
 */
export declare class ListInfo extends LinkElement {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets a value indicating whether returns true if this list is a definition of a list style.
     */
    isListStyleDefinition: boolean;
    /**
     * Gets or sets a value indicating whether returns true if this list is a reference to a list style.
     */
    isListStyleReference: boolean;
    /**
     * Gets or sets a value indicating whether returns true when the list contains 9 levels; false when 1 level.
     */
    isMultiLevel: boolean;
    /**
     * Gets or sets a value indicating whether specifies whether list should be restarted at each section. Default value is false.
     */
    isRestartAtEachSection: boolean;
    /**
     * Gets or sets the unique identifier of the list.
     */
    listId: number;
    /**
     * Gets or sets listLevels.
     */
    listLevels: ListLevels;
    /**
     * Gets or sets style.
     */
    style: Style;
    constructor(init?: Partial<ListInfo>);
}
