import { AttributeInfo } from '../internal/attributeInfo';
export declare const importsMapCompareOptions: {};
/**
 * Container class for compare documents options.
 */
export declare class CompareOptions {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets a value indicating whether true indicates that documents comparison is case insensitive. By default comparison is case sensitive.
     */
    ignoreCaseChanges: boolean;
    /**
     * Gets or sets a value indicating whether specifies whether to compare the differences in data contained in tables. By default tables are not ignored.
     */
    ignoreTables: boolean;
    /**
     * Gets or sets a value indicating whether specifies whether to compare differences in fields. By default fields are not ignored.
     */
    ignoreFields: boolean;
    /**
     * Gets or sets a value indicating whether specifies whether to compare differences in footnotes and endnotes. By default footnotes are not ignored.
     */
    ignoreFootnotes: boolean;
    /**
     * Gets or sets a value indicating whether specifies whether to compare differences in comments. By default comments are not ignored.
     */
    ignoreComments: boolean;
    /**
     * Gets or sets a value indicating whether specifies whether to compare differences in the data contained within text boxes. By default textboxes are not ignored.
     */
    ignoreTextboxes: boolean;
    /**
     * Gets or sets a value indicating whether true indicates that formatting is ignored. By default document formatting is not ignored.
     */
    ignoreFormatting: boolean;
    /**
     * Gets or sets a value indicating whether true indicates that headers and footers content is ignored. By default headers and footers are not ignored.
     */
    ignoreHeadersAndFooters: boolean;
    /**
     * Gets or sets specifies which document shall be used as a target during comparison.
     */
    target: CompareOptions.TargetEnum;
    constructor(init?: Partial<CompareOptions>);
}
/**
 * Enums for CompareOptions
 */
export declare namespace CompareOptions {
    enum TargetEnum {
        Current,
        New
    }
}
