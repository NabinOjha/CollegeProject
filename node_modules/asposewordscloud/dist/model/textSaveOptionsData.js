"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const saveOptionsData_1 = require("./saveOptionsData");
exports.importsMapTextSaveOptionsData = {
    SaveOptionsData: saveOptionsData_1.SaveOptionsData,
};
/**
 * Container class for text save options.
 */
class TextSaveOptionsData extends saveOptionsData_1.SaveOptionsData {
    constructor(init) {
        super(init);
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(TextSaveOptionsData.attributeTypeMap);
    }
}
exports.TextSaveOptionsData = TextSaveOptionsData;
/**
 * Attribute type map
 */
TextSaveOptionsData.attributeTypeMap = [
    {
        name: "addBidiMarks",
        baseName: "AddBidiMarks",
        type: "boolean",
    },
    {
        name: "encoding",
        baseName: "Encoding",
        type: "string",
    },
    {
        name: "exportHeadersFootersMode",
        baseName: "ExportHeadersFootersMode",
        type: "TextSaveOptionsData.ExportHeadersFootersModeEnum",
    },
    {
        name: "forcePageBreaks",
        baseName: "ForcePageBreaks",
        type: "boolean",
    },
    {
        name: "paragraphBreak",
        baseName: "ParagraphBreak",
        type: "string",
    },
    {
        name: "preserveTableLayout",
        baseName: "PreserveTableLayout",
        type: "boolean",
    },
    {
        name: "simplifyListLabels",
        baseName: "SimplifyListLabels",
        type: "boolean",
    }
];
/**
 * Enums for TextSaveOptionsData
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (TextSaveOptionsData) {
    let ExportHeadersFootersModeEnum;
    (function (ExportHeadersFootersModeEnum) {
        ExportHeadersFootersModeEnum[ExportHeadersFootersModeEnum["None"] = 'None'] = "None";
        ExportHeadersFootersModeEnum[ExportHeadersFootersModeEnum["PrimaryOnly"] = 'PrimaryOnly'] = "PrimaryOnly";
        ExportHeadersFootersModeEnum[ExportHeadersFootersModeEnum["AllAtEnd"] = 'AllAtEnd'] = "AllAtEnd";
    })(ExportHeadersFootersModeEnum = TextSaveOptionsData.ExportHeadersFootersModeEnum || (TextSaveOptionsData.ExportHeadersFootersModeEnum = {}));
})(TextSaveOptionsData = exports.TextSaveOptionsData || (exports.TextSaveOptionsData = {}));
// tslint:enable:quotemark
