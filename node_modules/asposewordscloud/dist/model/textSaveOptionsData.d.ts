import { AttributeInfo } from '../internal/attributeInfo';
import { SaveOptionsData } from './saveOptionsData';
export declare const importsMapTextSaveOptionsData: {
    SaveOptionsData: typeof SaveOptionsData;
};
/**
 * Container class for text save options.
 */
export declare class TextSaveOptionsData extends SaveOptionsData {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets specifies whether to add bi-directional marks before each BiDi run when exporting in plain text format. The default value is true.
     */
    addBidiMarks: boolean;
    /**
     * Gets or sets specifies the encoding to use when exporting in plain text format.
     */
    encoding: string;
    /**
     * Gets or sets specifies whether to output headers and footers when exporting in plain text format. default value is TxtExportHeadersFootersMode.PrimaryOnly.
     */
    exportHeadersFootersMode: TextSaveOptionsData.ExportHeadersFootersModeEnum;
    /**
     * Gets or sets allows to specify whether the page breaks should be preserved during export. The default value is false.
     */
    forcePageBreaks: boolean;
    /**
     * Gets or sets specifies the string to use as a paragraph break when exporting in plain text format.
     */
    paragraphBreak: string;
    /**
     * Gets or sets specifies whether the program should attempt to preserve layout of tables when saving in the plain text format.
     */
    preserveTableLayout: boolean;
    /**
     * Gets or sets specifies whether the program should simplify list labels in case of complex label formatting not being adequately represented by plain text.
     */
    simplifyListLabels: boolean;
    constructor(init?: Partial<TextSaveOptionsData>);
}
/**
 * Enums for TextSaveOptionsData
 */
export declare namespace TextSaveOptionsData {
    enum ExportHeadersFootersModeEnum {
        None,
        PrimaryOnly,
        AllAtEnd
    }
}
