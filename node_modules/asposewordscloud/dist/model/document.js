"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const documentProperties_1 = require("./documentProperties");
const link_1 = require("./link");
exports.importsMapDocument = {
    DocumentProperties: documentProperties_1.DocumentProperties,
    Link: link_1.Link,
};
/**
 * Represents Words document DTO.
 */
class Document {
    constructor(init) {
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return Document.attributeTypeMap;
    }
}
exports.Document = Document;
/**
 * Attribute type map
 */
Document.attributeTypeMap = [
    {
        name: "links",
        baseName: "Links",
        type: "Array<Link>",
    },
    {
        name: "fileName",
        baseName: "FileName",
        type: "string",
    },
    {
        name: "sourceFormat",
        baseName: "SourceFormat",
        type: "Document.SourceFormatEnum",
    },
    {
        name: "isEncrypted",
        baseName: "IsEncrypted",
        type: "boolean",
    },
    {
        name: "isSigned",
        baseName: "IsSigned",
        type: "boolean",
    },
    {
        name: "documentProperties",
        baseName: "DocumentProperties",
        type: "DocumentProperties",
    }
];
/**
 * Enums for Document
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (Document) {
    let SourceFormatEnum;
    (function (SourceFormatEnum) {
        SourceFormatEnum[SourceFormatEnum["Unknown"] = 'Unknown'] = "Unknown";
        SourceFormatEnum[SourceFormatEnum["Doc"] = 'Doc'] = "Doc";
        SourceFormatEnum[SourceFormatEnum["Dot"] = 'Dot'] = "Dot";
        SourceFormatEnum[SourceFormatEnum["DocPreWord60"] = 'DocPreWord60'] = "DocPreWord60";
        SourceFormatEnum[SourceFormatEnum["Docx"] = 'Docx'] = "Docx";
        SourceFormatEnum[SourceFormatEnum["Docm"] = 'Docm'] = "Docm";
        SourceFormatEnum[SourceFormatEnum["Dotx"] = 'Dotx'] = "Dotx";
        SourceFormatEnum[SourceFormatEnum["Dotm"] = 'Dotm'] = "Dotm";
        SourceFormatEnum[SourceFormatEnum["FlatOpc"] = 'FlatOpc'] = "FlatOpc";
        SourceFormatEnum[SourceFormatEnum["Rtf"] = 'Rtf'] = "Rtf";
        SourceFormatEnum[SourceFormatEnum["WordML"] = 'WordML'] = "WordML";
        SourceFormatEnum[SourceFormatEnum["Html"] = 'Html'] = "Html";
        SourceFormatEnum[SourceFormatEnum["Mhtml"] = 'Mhtml'] = "Mhtml";
        SourceFormatEnum[SourceFormatEnum["Epub"] = 'Epub'] = "Epub";
        SourceFormatEnum[SourceFormatEnum["Text"] = 'Text'] = "Text";
        SourceFormatEnum[SourceFormatEnum["Odt"] = 'Odt'] = "Odt";
        SourceFormatEnum[SourceFormatEnum["Ott"] = 'Ott'] = "Ott";
        SourceFormatEnum[SourceFormatEnum["Pdf"] = 'Pdf'] = "Pdf";
        SourceFormatEnum[SourceFormatEnum["Xps"] = 'Xps'] = "Xps";
        SourceFormatEnum[SourceFormatEnum["Tiff"] = 'Tiff'] = "Tiff";
        SourceFormatEnum[SourceFormatEnum["Svg"] = 'Svg'] = "Svg";
    })(SourceFormatEnum = Document.SourceFormatEnum || (Document.SourceFormatEnum = {}));
})(Document = exports.Document || (exports.Document = {}));
// tslint:enable:quotemark
