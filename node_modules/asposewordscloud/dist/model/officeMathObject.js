"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const officeMathLink_1 = require("./officeMathLink");
const storyChildNodes_1 = require("./storyChildNodes");
exports.importsMapOfficeMathObject = {
    OfficeMathLink: officeMathLink_1.OfficeMathLink,
    StoryChildNodes: storyChildNodes_1.StoryChildNodes,
};
/**
 * OfficeMath object.
 */
class OfficeMathObject extends officeMathLink_1.OfficeMathLink {
    constructor(init) {
        super(init);
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(OfficeMathObject.attributeTypeMap);
    }
}
exports.OfficeMathObject = OfficeMathObject;
/**
 * Attribute type map
 */
OfficeMathObject.attributeTypeMap = [
    {
        name: "content",
        baseName: "Content",
        type: "StoryChildNodes",
    },
    {
        name: "displayType",
        baseName: "DisplayType",
        type: "OfficeMathObject.DisplayTypeEnum",
    },
    {
        name: "justification",
        baseName: "Justification",
        type: "OfficeMathObject.JustificationEnum",
    },
    {
        name: "mathObjectType",
        baseName: "MathObjectType",
        type: "OfficeMathObject.MathObjectTypeEnum",
    }
];
/**
 * Enums for OfficeMathObject
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (OfficeMathObject) {
    let DisplayTypeEnum;
    (function (DisplayTypeEnum) {
        DisplayTypeEnum[DisplayTypeEnum["Display"] = 'Display'] = "Display";
        DisplayTypeEnum[DisplayTypeEnum["Inline"] = 'Inline'] = "Inline";
    })(DisplayTypeEnum = OfficeMathObject.DisplayTypeEnum || (OfficeMathObject.DisplayTypeEnum = {}));
    let JustificationEnum;
    (function (JustificationEnum) {
        JustificationEnum[JustificationEnum["CenterGroup"] = 'CenterGroup'] = "CenterGroup";
        JustificationEnum[JustificationEnum["Default"] = 'Default'] = "Default";
        JustificationEnum[JustificationEnum["Center"] = 'Center'] = "Center";
        JustificationEnum[JustificationEnum["Left"] = 'Left'] = "Left";
        JustificationEnum[JustificationEnum["Right"] = 'Right'] = "Right";
        JustificationEnum[JustificationEnum["Inline"] = 'Inline'] = "Inline";
    })(JustificationEnum = OfficeMathObject.JustificationEnum || (OfficeMathObject.JustificationEnum = {}));
    let MathObjectTypeEnum;
    (function (MathObjectTypeEnum) {
        MathObjectTypeEnum[MathObjectTypeEnum["OMath"] = 'OMath'] = "OMath";
        MathObjectTypeEnum[MathObjectTypeEnum["OMathPara"] = 'OMathPara'] = "OMathPara";
        MathObjectTypeEnum[MathObjectTypeEnum["Accent"] = 'Accent'] = "Accent";
        MathObjectTypeEnum[MathObjectTypeEnum["Bar"] = 'Bar'] = "Bar";
        MathObjectTypeEnum[MathObjectTypeEnum["BorderBox"] = 'BorderBox'] = "BorderBox";
        MathObjectTypeEnum[MathObjectTypeEnum["Box"] = 'Box'] = "Box";
        MathObjectTypeEnum[MathObjectTypeEnum["Delimiter"] = 'Delimiter'] = "Delimiter";
        MathObjectTypeEnum[MathObjectTypeEnum["Degree"] = 'Degree'] = "Degree";
        MathObjectTypeEnum[MathObjectTypeEnum["Argument"] = 'Argument'] = "Argument";
        MathObjectTypeEnum[MathObjectTypeEnum["Array"] = 'Array'] = "Array";
        MathObjectTypeEnum[MathObjectTypeEnum["Fraction"] = 'Fraction'] = "Fraction";
        MathObjectTypeEnum[MathObjectTypeEnum["Denominator"] = 'Denominator'] = "Denominator";
        MathObjectTypeEnum[MathObjectTypeEnum["Numerator"] = 'Numerator'] = "Numerator";
        MathObjectTypeEnum[MathObjectTypeEnum["Function"] = 'Function'] = "Function";
        MathObjectTypeEnum[MathObjectTypeEnum["FunctionName"] = 'FunctionName'] = "FunctionName";
        MathObjectTypeEnum[MathObjectTypeEnum["GroupCharacter"] = 'GroupCharacter'] = "GroupCharacter";
        MathObjectTypeEnum[MathObjectTypeEnum["Limit"] = 'Limit'] = "Limit";
        MathObjectTypeEnum[MathObjectTypeEnum["LowerLimit"] = 'LowerLimit'] = "LowerLimit";
        MathObjectTypeEnum[MathObjectTypeEnum["UpperLimit"] = 'UpperLimit'] = "UpperLimit";
        MathObjectTypeEnum[MathObjectTypeEnum["Matrix"] = 'Matrix'] = "Matrix";
        MathObjectTypeEnum[MathObjectTypeEnum["MatrixRow"] = 'MatrixRow'] = "MatrixRow";
        MathObjectTypeEnum[MathObjectTypeEnum["NAry"] = 'NAry'] = "NAry";
        MathObjectTypeEnum[MathObjectTypeEnum["Phantom"] = 'Phantom'] = "Phantom";
        MathObjectTypeEnum[MathObjectTypeEnum["Radical"] = 'Radical'] = "Radical";
        MathObjectTypeEnum[MathObjectTypeEnum["SubscriptPart"] = 'SubscriptPart'] = "SubscriptPart";
        MathObjectTypeEnum[MathObjectTypeEnum["SuperscriptPart"] = 'SuperscriptPart'] = "SuperscriptPart";
        MathObjectTypeEnum[MathObjectTypeEnum["PreSubSuperscript"] = 'PreSubSuperscript'] = "PreSubSuperscript";
        MathObjectTypeEnum[MathObjectTypeEnum["Subscript"] = 'Subscript'] = "Subscript";
        MathObjectTypeEnum[MathObjectTypeEnum["SubSuperscript"] = 'SubSuperscript'] = "SubSuperscript";
        MathObjectTypeEnum[MathObjectTypeEnum["Supercript"] = 'Supercript'] = "Supercript";
    })(MathObjectTypeEnum = OfficeMathObject.MathObjectTypeEnum || (OfficeMathObject.MathObjectTypeEnum = {}));
})(OfficeMathObject = exports.OfficeMathObject || (exports.OfficeMathObject = {}));
// tslint:enable:quotemark
