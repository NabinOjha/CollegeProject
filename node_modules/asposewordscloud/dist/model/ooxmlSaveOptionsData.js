"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const saveOptionsData_1 = require("./saveOptionsData");
exports.importsMapOoxmlSaveOptionsData = {
    SaveOptionsData: saveOptionsData_1.SaveOptionsData,
};
/**
 * container class for docx/docm/dotx/dotm/flatopc save options.
 */
class OoxmlSaveOptionsData extends saveOptionsData_1.SaveOptionsData {
    constructor(init) {
        super(init);
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(OoxmlSaveOptionsData.attributeTypeMap);
    }
}
exports.OoxmlSaveOptionsData = OoxmlSaveOptionsData;
/**
 * Attribute type map
 */
OoxmlSaveOptionsData.attributeTypeMap = [
    {
        name: "compliance",
        baseName: "Compliance",
        type: "string",
    },
    {
        name: "compressionLevel",
        baseName: "CompressionLevel",
        type: "OoxmlSaveOptionsData.CompressionLevelEnum",
    },
    {
        name: "password",
        baseName: "Password",
        type: "string",
    },
    {
        name: "prettyFormat",
        baseName: "PrettyFormat",
        type: "boolean",
    }
];
/**
 * Enums for OoxmlSaveOptionsData
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (OoxmlSaveOptionsData) {
    let CompressionLevelEnum;
    (function (CompressionLevelEnum) {
        CompressionLevelEnum[CompressionLevelEnum["Normal"] = 'Normal'] = "Normal";
        CompressionLevelEnum[CompressionLevelEnum["Maximum"] = 'Maximum'] = "Maximum";
        CompressionLevelEnum[CompressionLevelEnum["Fast"] = 'Fast'] = "Fast";
        CompressionLevelEnum[CompressionLevelEnum["SuperFast"] = 'SuperFast'] = "SuperFast";
    })(CompressionLevelEnum = OoxmlSaveOptionsData.CompressionLevelEnum || (OoxmlSaveOptionsData.CompressionLevelEnum = {}));
})(OoxmlSaveOptionsData = exports.OoxmlSaveOptionsData || (exports.OoxmlSaveOptionsData = {}));
// tslint:enable:quotemark
