"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const csvDataLoadOptions_1 = require("./csvDataLoadOptions");
const reportBuildOptions_1 = require("./reportBuildOptions");
exports.importsMapReportEngineSettings = {
    CsvDataLoadOptions: csvDataLoadOptions_1.CsvDataLoadOptions,
    ReportBuildOptions: reportBuildOptions_1.ReportBuildOptions,
};
/**
 * Report engine settings.
 */
class ReportEngineSettings {
    constructor(init) {
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return ReportEngineSettings.attributeTypeMap;
    }
}
exports.ReportEngineSettings = ReportEngineSettings;
/**
 * Attribute type map
 */
ReportEngineSettings.attributeTypeMap = [
    {
        name: "dataSourceType",
        baseName: "DataSourceType",
        type: "ReportEngineSettings.DataSourceTypeEnum",
    },
    {
        name: "reportBuildOptions",
        baseName: "ReportBuildOptions",
        type: "Array<ReportBuildOptions>",
    },
    {
        name: "dataSourceName",
        baseName: "DataSourceName",
        type: "string",
    },
    {
        name: "csvDataLoadOptions",
        baseName: "CsvDataLoadOptions",
        type: "CsvDataLoadOptions",
    }
];
/**
 * Enums for ReportEngineSettings
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (ReportEngineSettings) {
    let DataSourceTypeEnum;
    (function (DataSourceTypeEnum) {
        DataSourceTypeEnum[DataSourceTypeEnum["Xml"] = 'Xml'] = "Xml";
        DataSourceTypeEnum[DataSourceTypeEnum["Json"] = 'Json'] = "Json";
        DataSourceTypeEnum[DataSourceTypeEnum["Csv"] = 'Csv'] = "Csv";
    })(DataSourceTypeEnum = ReportEngineSettings.DataSourceTypeEnum || (ReportEngineSettings.DataSourceTypeEnum = {}));
})(ReportEngineSettings = exports.ReportEngineSettings || (exports.ReportEngineSettings = {}));
// tslint:enable:quotemark
