"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.importsMapReplaceRange = {};
/**
 * Range element.
 */
class ReplaceRange {
    constructor(init) {
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return ReplaceRange.attributeTypeMap;
    }
}
exports.ReplaceRange = ReplaceRange;
/**
 * Attribute type map
 */
ReplaceRange.attributeTypeMap = [
    {
        name: "text",
        baseName: "Text",
        type: "string",
    },
    {
        name: "textType",
        baseName: "TextType",
        type: "ReplaceRange.TextTypeEnum",
    }
];
/**
 * Enums for ReplaceRange
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (ReplaceRange) {
    let TextTypeEnum;
    (function (TextTypeEnum) {
        TextTypeEnum[TextTypeEnum["Text"] = 'Text'] = "Text";
        TextTypeEnum[TextTypeEnum["Html"] = 'Html'] = "Html";
    })(TextTypeEnum = ReplaceRange.TextTypeEnum || (ReplaceRange.TextTypeEnum = {}));
})(ReplaceRange = exports.ReplaceRange || (exports.ReplaceRange = {}));
// tslint:enable:quotemark
