import { AttributeInfo } from '../internal/attributeInfo';
import { FixedPageSaveOptionsData } from './fixedPageSaveOptionsData';
import { MetafileRenderingOptionsData } from './metafileRenderingOptionsData';
export declare const importsMapSvgSaveOptionsData: {
    FixedPageSaveOptionsData: typeof FixedPageSaveOptionsData;
    MetafileRenderingOptionsData: typeof MetafileRenderingOptionsData;
};
/**
 * container class for svg save options.
 */
export declare class SvgSaveOptionsData extends FixedPageSaveOptionsData {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets specified whether images should be embedded into SVG document as base64.
     */
    exportEmbeddedImages: boolean;
    /**
     * Gets or sets specifies if the output SVG should fill the available viewport area (browser window or container). When set to true width and height of output SVG are set to 100%.
     */
    fitToViewPort: boolean;
    /**
     * Gets or sets specifies the physical folder where resources (images) are saved when exporting.
     */
    resourcesFolder: string;
    /**
     * Gets or sets specifies the name of the folder used to construct image URIs.
     */
    resourcesFolderAlias: string;
    /**
     * Gets or sets show/hide page stepper.
     */
    showPageBorder: boolean;
    /**
     * Gets or sets determines how text should be rendered.
     */
    textOutputMode: string;
    constructor(init?: Partial<SvgSaveOptionsData>);
}
