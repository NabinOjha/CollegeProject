"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.importsMapCompareOptions = {};
/**
 * Container class for compare documents options.
 */
class CompareOptions {
    constructor(init) {
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return CompareOptions.attributeTypeMap;
    }
}
exports.CompareOptions = CompareOptions;
/**
 * Attribute type map
 */
CompareOptions.attributeTypeMap = [
    {
        name: "ignoreCaseChanges",
        baseName: "IgnoreCaseChanges",
        type: "boolean",
    },
    {
        name: "ignoreTables",
        baseName: "IgnoreTables",
        type: "boolean",
    },
    {
        name: "ignoreFields",
        baseName: "IgnoreFields",
        type: "boolean",
    },
    {
        name: "ignoreFootnotes",
        baseName: "IgnoreFootnotes",
        type: "boolean",
    },
    {
        name: "ignoreComments",
        baseName: "IgnoreComments",
        type: "boolean",
    },
    {
        name: "ignoreTextboxes",
        baseName: "IgnoreTextboxes",
        type: "boolean",
    },
    {
        name: "ignoreFormatting",
        baseName: "IgnoreFormatting",
        type: "boolean",
    },
    {
        name: "ignoreHeadersAndFooters",
        baseName: "IgnoreHeadersAndFooters",
        type: "boolean",
    },
    {
        name: "target",
        baseName: "Target",
        type: "CompareOptions.TargetEnum",
    }
];
/**
 * Enums for CompareOptions
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (CompareOptions) {
    let TargetEnum;
    (function (TargetEnum) {
        TargetEnum[TargetEnum["Current"] = 'Current'] = "Current";
        TargetEnum[TargetEnum["New"] = 'New'] = "New";
    })(TargetEnum = CompareOptions.TargetEnum || (CompareOptions.TargetEnum = {}));
})(CompareOptions = exports.CompareOptions || (exports.CompareOptions = {}));
// tslint:enable:quotemark
