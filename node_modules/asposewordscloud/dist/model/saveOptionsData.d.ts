import { AttributeInfo } from '../internal/attributeInfo';
export declare const importsMapSaveOptionsData: {};
/**
 * base container class for save options data.
 */
export declare class SaveOptionsData {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets format of save.
     */
    saveFormat: string;
    /**
     * Gets or sets name of destination file.
     */
    fileName: string;
    /**
     * Gets or sets a value determining how DrawingML shapes are rendered. { Fallback | DrawingML }.
     */
    dmlRenderingMode: string;
    /**
     * Gets or sets a value determining how DrawingML effects are rendered. { Simplified | None | Fine }.
     */
    dmlEffectsRenderingMode: string;
    /**
     * Gets or sets controls zip output or not. Default value is false.
     */
    zipOutput: boolean;
    /**
     * Gets or sets a value determining whether the Aspose.Words.Properties.BuiltInDocumentProperties.LastSavedTime property is updated before saving.
     */
    updateLastSavedTimeProperty: boolean;
    /**
     * Gets or sets value determining whether content of StructuredDocumentTag is updated before saving.
     */
    updateSdtContent: boolean;
    /**
     * Gets or sets a value determining if fields should be updated before saving the document to a fixed page format. Default value for this property is. true
     */
    updateFields: boolean;
    /**
     * Gets or sets a value determining how 3D effects are rendered.
     */
    dml3DEffectsRenderingMode: SaveOptionsData.Dml3DEffectsRenderingModeEnum;
    /**
     * Gets or sets a value determining whether the Aspose.Words.Properties.BuiltInDocumentProperties.LastPrinted property is updated before saving.
     */
    updateLastPrintedProperty: boolean;
    constructor(init?: Partial<SaveOptionsData>);
}
/**
 * Enums for SaveOptionsData
 */
export declare namespace SaveOptionsData {
    enum Dml3DEffectsRenderingModeEnum {
        Basic,
        Advanced
    }
}
