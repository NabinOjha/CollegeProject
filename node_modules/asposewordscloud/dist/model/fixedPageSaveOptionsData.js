"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const metafileRenderingOptionsData_1 = require("./metafileRenderingOptionsData");
const saveOptionsData_1 = require("./saveOptionsData");
exports.importsMapFixedPageSaveOptionsData = {
    MetafileRenderingOptionsData: metafileRenderingOptionsData_1.MetafileRenderingOptionsData,
    SaveOptionsData: saveOptionsData_1.SaveOptionsData,
};
/**
 * Contains common options that can be specified when saving a document into fixed page formats (PDF, XPS, images etc).
 */
class FixedPageSaveOptionsData extends saveOptionsData_1.SaveOptionsData {
    constructor(init) {
        super(init);
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(FixedPageSaveOptionsData.attributeTypeMap);
    }
}
exports.FixedPageSaveOptionsData = FixedPageSaveOptionsData;
/**
 * Attribute type map
 */
FixedPageSaveOptionsData.attributeTypeMap = [
    {
        name: "colorMode",
        baseName: "ColorMode",
        type: "string",
    },
    {
        name: "jpegQuality",
        baseName: "JpegQuality",
        type: "number",
    },
    {
        name: "metafileRenderingOptions",
        baseName: "MetafileRenderingOptions",
        type: "MetafileRenderingOptionsData",
    },
    {
        name: "numeralFormat",
        baseName: "NumeralFormat",
        type: "string",
    },
    {
        name: "optimizeOutput",
        baseName: "OptimizeOutput",
        type: "boolean",
    },
    {
        name: "pageCount",
        baseName: "PageCount",
        type: "number",
    },
    {
        name: "pageIndex",
        baseName: "PageIndex",
        type: "number",
    }
];
// tslint:enable:quotemark
