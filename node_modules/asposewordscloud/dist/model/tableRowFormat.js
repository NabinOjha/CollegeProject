"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const linkElement_1 = require("./linkElement");
const wordsApiLink_1 = require("./wordsApiLink");
exports.importsMapTableRowFormat = {
    LinkElement: linkElement_1.LinkElement,
    WordsApiLink: wordsApiLink_1.WordsApiLink,
};
/**
 * Represents all formatting for a table row.
 */
class TableRowFormat extends linkElement_1.LinkElement {
    constructor(init) {
        super(init);
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(TableRowFormat.attributeTypeMap);
    }
}
exports.TableRowFormat = TableRowFormat;
/**
 * Attribute type map
 */
TableRowFormat.attributeTypeMap = [
    {
        name: "allowBreakAcrossPages",
        baseName: "AllowBreakAcrossPages",
        type: "boolean",
    },
    {
        name: "headingFormat",
        baseName: "HeadingFormat",
        type: "boolean",
    },
    {
        name: "height",
        baseName: "Height",
        type: "number",
    },
    {
        name: "heightRule",
        baseName: "HeightRule",
        type: "TableRowFormat.HeightRuleEnum",
    }
];
/**
 * Enums for TableRowFormat
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (TableRowFormat) {
    let HeightRuleEnum;
    (function (HeightRuleEnum) {
        HeightRuleEnum[HeightRuleEnum["AtLeast"] = 'AtLeast'] = "AtLeast";
        HeightRuleEnum[HeightRuleEnum["Exactly"] = 'Exactly'] = "Exactly";
        HeightRuleEnum[HeightRuleEnum["Auto"] = 'Auto'] = "Auto";
    })(HeightRuleEnum = TableRowFormat.HeightRuleEnum || (TableRowFormat.HeightRuleEnum = {}));
})(TableRowFormat = exports.TableRowFormat || (exports.TableRowFormat = {}));
// tslint:enable:quotemark
