"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fixedPageSaveOptionsData_1 = require("./fixedPageSaveOptionsData");
const metafileRenderingOptionsData_1 = require("./metafileRenderingOptionsData");
exports.importsMapHtmlFixedSaveOptionsData = {
    FixedPageSaveOptionsData: fixedPageSaveOptionsData_1.FixedPageSaveOptionsData,
    MetafileRenderingOptionsData: metafileRenderingOptionsData_1.MetafileRenderingOptionsData,
};
/**
 * container class for fixed html save options.
 */
class HtmlFixedSaveOptionsData extends fixedPageSaveOptionsData_1.FixedPageSaveOptionsData {
    constructor(init) {
        super(init);
        Object.assign(this, init);
    }
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(HtmlFixedSaveOptionsData.attributeTypeMap);
    }
}
exports.HtmlFixedSaveOptionsData = HtmlFixedSaveOptionsData;
/**
 * Attribute type map
 */
HtmlFixedSaveOptionsData.attributeTypeMap = [
    {
        name: "cssClassNamesPrefix",
        baseName: "CssClassNamesPrefix",
        type: "string",
    },
    {
        name: "encoding",
        baseName: "Encoding",
        type: "string",
    },
    {
        name: "exportEmbeddedCss",
        baseName: "ExportEmbeddedCss",
        type: "boolean",
    },
    {
        name: "exportEmbeddedFonts",
        baseName: "ExportEmbeddedFonts",
        type: "boolean",
    },
    {
        name: "exportEmbeddedImages",
        baseName: "ExportEmbeddedImages",
        type: "boolean",
    },
    {
        name: "exportFormFields",
        baseName: "ExportFormFields",
        type: "boolean",
    },
    {
        name: "fontFormat",
        baseName: "FontFormat",
        type: "string",
    },
    {
        name: "pageHorizontalAlignment",
        baseName: "PageHorizontalAlignment",
        type: "string",
    },
    {
        name: "pageMargins",
        baseName: "PageMargins",
        type: "number",
    },
    {
        name: "resourcesFolder",
        baseName: "ResourcesFolder",
        type: "string",
    },
    {
        name: "resourcesFolderAlias",
        baseName: "ResourcesFolderAlias",
        type: "string",
    },
    {
        name: "saveFontFaceCssSeparately",
        baseName: "SaveFontFaceCssSeparately",
        type: "boolean",
    },
    {
        name: "showPageBorder",
        baseName: "ShowPageBorder",
        type: "boolean",
    },
    {
        name: "useTargetMachineFonts",
        baseName: "UseTargetMachineFonts",
        type: "boolean",
    }
];
